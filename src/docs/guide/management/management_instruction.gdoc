Each main folder in the staging area you see is represented here.

The moment when a XML instruction is offered; or when it is autocreated, the number of declared files will show up.
In addition each file will have a validation status. The files can be viewed by selecting the link of the main folder.

h3. Commands
@Autocreate@
This will autocreate an instruction. Press it and depending on the number of files, the instruction will be put into
the database.

{note}that the use of this service will not apply a checksum comparison between the content at the producer's side (outside the staging area that is ). And the material stored onto the staging area. The content producer should decide if the transport is reliable enough to ensure the data's integrity.{note}

@Recreate@
This option is available at the "Stored objects panel". It will reconstruct an earlier used instruction.
This command will not work, if there are still files staged with an existing instruction.

@Download@
One you created or uploaded an instruction, it can be downloaded as an XML instruction document.

{note}Unfortunately, the download onto to the staging area of an instruction is not possible because of server
permissions. Choose the "download instructions via the browser" option in stead.{note}

@Upload@
You can upload a XML instruction here so it will be placed on the staging area. FTP is also a way of uploading an
instruction.

@Validate@
Will perform a check on the instruction vis-a-vis the files in the staging area.

@Process files@
Kick starts the instruction

{note}
If you monitor the progress of for example an upload, creation or validation of an instruction it will eventually
finish. However no @ingest instruction@ option seems to appear. To make it appear, press the browser's refresh button.
{note}

h3. Monitoring
Each phase or step in the creation and running of an instruction can be monitored. The same for each individual files.
During an ingest, you can see the accumulative result of all files by selecting the link of the main folder.

h4. Instruction status
This is the particular status of an instruction.

!statusinstruction.gif!

h3. Monitoring with the API

You can use the API to retrieve the current status as well. Use:

NA/instruction/status?pid=[The PID of a file contained in the instruction]

Example request:
{code}GET /12345/instruction/status?pid=12345/abcdefg HTTP/1.1
Accept: */*
Connection: Keep-Alive
Content-Type: text/xml; charset=utf-8
Authorization: Bearer [webservice key]{code}:

Example response:
{code:xml}
<instruction xmlns="http://objectrepository.org/instruction/1.0/" access="open" action="upsert" autoGeneratePIDs="none" contentType="application/octet-stream" embargoAccess="closed" fileSet="/mnt/sa/12345/67890/folder" na="12345" pdfLevel="level2" replaceExistingDerivatives="true" resolverBaseUrl="http://hdl.handle.net/" task="org.objectrepository.instruction.Task : null" id="56d964380cf264fa84b921ae" plan="StagingfileIngestMaster">
    <workflow>
        <identifier>39f9f6f0-cd30-446f-986d-85f187d89608</identifier>
        <name>InstructionIngest</name>
        <statusCode>900</statusCode>
    </workflow>
</instruction>
{code}

The instruction action and status is mentioned in the @instruction/workflow element. The codes indicate the following:

For a validation where the name is InstructionValidate
{code}100=Validation
100.status=Validation instruction command
100.info=A command to validate the instruction was given
200=Validate files
200.status=Validate instruction command received
200.info=You gave the command for validating the instruction
300=Validation requested
300.status=Validation requested
300.info=A request to validate your instruction and files is being prepared
400=Working
400.status=Validating instruction
400.info=The instruction is being validated is placed in a queue
500=Done
500.status=Done validating
500.info=The instruction is validated
600=Verification
600.status=Verification
600.info=Verifying if the validation was succesfull
700=Validation failed
700.status=Unable to validate
700.info=The validation process was interupted
701=Validation error
701.status=File already exists
701.info=File already exists! Either delete it first or use the Update functionality!
702=Validation error
702.status=File does not exist
702.info=File does not exist; please upload a file
703=Validation error
703.status=File size is zero in length
703.info=File size is zero; please re-upload the file
704=Validation error
704.status=File cannot not be read
704.info=File may be corrupted. Please re-upload the file or change its settings
705=Validation error
705.status=Missing contenttype.
705.info=There are files in the instruction that do not have a contentType. Set these contentTypes... or set a global contentType that can be applied to all files.
706=Validation error
706.status=Declared file not found
706.info=The file mentioned in the location element in the instruction is not in the staging area
707=Validation error
707.status=File missing
707.info=The system can not find the file the section refers to
708=Validation error
708.status=Unable to set PID
708.info=No <pid> value provided and no NA attribute present for the system to create random value
709=Validation error
709.status=Unable to set PID
709.info=No <pid> value provided and lidPrefix attribute present for the system to create random value
710=Validation error
710.status=Unable to set PID
710.info=No <pid>, no lidPrefix attribute & <lid> not in proper format () for
711=Validation error
711.status=Checksum mismatch
711.info=The CP-provided <md5> checksum does not match the one generated by the system for file.
712=Validation error
712.status=md5 missing
712.info=There is no md5 checksum.
713=Validation error
713.status=Missing access qualifier
713.info=There are files in the instruction that do not have an access qualifier. Set these... or set a global access status that can be applied to all files.
714=Validation error
714.status=No action qualifier.
714.info=There are files in the instruction that do not have an action qualifier. Set these... or set a global action status that can be applied to all files.
715=Validation error
715.status=Identifier missing
715.info=The file has no persistent identifier or local substitute
716=Validation error
716.status=Persistent identifier missing
716.info=The file has no pid
723.status=MD5 checksum
723.info=Two or more md5 checksums are identical, but only one unique file can be ingested
800=Validation
800.status=Validation complete
800.info=The instruction has been validated{code}

For an ingest where the name is InstructionIngest:
{code}100=Ingest
100.status=Ingest file command
100.info=A command to ingest the files was given
200=Process files
200.status=Process files command received
200.info=You gave the command for ingesting files
300=Ingest requested
300.status=Ingest requested
300.info=A request to ingest your files is being prepared
400=Queued
400.status=Ingest pending
400.info=The command is placed in a queue
500=Working
500.status=Ingesting files
500.info=The files are placed on the ingest queue
600=Verification
600.status=Verifying the batch ingest
600.info=Checking if all files are marked for ingest
700 = Failure
700.status = There were problems processing the instruction.
700.info=Examine the files and correct where necessary
800 = Files are being ingested
800.status = Files are being ingested
800.info=The files are being ingested
900.status=Tasks complete
900.info=All tasks have been completed.{code}

h4. Files status accumulative
All progress for the files

!statusfiles.gif!

h4. Per file view
!statusfile.gif!

h4. Success and retries
When all services of a file have completed, the file reference will be removed from the staging area. In the end all
the declared files will be gone.

Of course, things can go wrong. In that case the error is mentioned and nothing will happen until the issue is resolved.
If you feel this is because of a bug or system application failure, please contact the service desk that operates the
object repository.

You can rerun instructions with different options. For example, because you want to change a label, access status,
produce derivatives, etc.